---
title: "Final Project Write-Up"
author: "Olivia Varricchione"
format: 
  html:
    embed-resources: true
---

```{r}
#| echo: false
#| output: false
#| warning: false
library(tidyverse)
scoobydoo <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-07-13/scoobydoo.csv')
df <- scoobydoo |> select(2, 5, 13, 16, 18:41, 48, 54, 55, 58, 59, 62, 65, 17)
df <- df |> mutate(split_up = fct_recode(split_up, No = "0", Yes = "1", Yes = "2")) |>
  mutate(trap_work_first = if_else(is.na(trap_work_first),                    
                                       "NULL", trap_work_first)) |>
  mutate(trap_work_first = fct_recode(trap_work_first, No = "FALSE", Yes = "TRUE", "NA" = "NULL")) |>
  mutate(culprit_gender = fct_collapse(culprit_gender,
                                           Male = c("Male", "Male,Male",
                                                    "Male,Male,Male",
                                                    "Male,Male,Male,Male",
                                                    "Male,Male,Male,Male,Male"),
                                           Female = c("Female", "Female,Female"),
                                           "Male and Female" = c("Female,Female,Male",
                                                                 "Female,Male",
                                                                 "Female,Male, Male",
                                                         "Female,Male,Female,Male,Male",
                                                                 "Female,Male,Male",
                                                                "Female,Male,Male,Male",
                                                                 "Male,Female",                                                      "Male,Female,Female,Male,Male,Male,Female",
                     "Male,Female,Female,Male,Male,Male,Female,Female,Male,Male,Female",
                                                                 "Male,Female,Male",
                                                             "Male,Female,Male,Female",
                                                   "Male,Female,Male,Female,Male,Male",
                                                                 "Male,Male,Female",
                                                          "Male,Male,Female,Male,Male",
                                                               "Male,Male,Male,Female",
                          "Male,Male,Male,Male,Male,Male,Female,Male,Male,Male,Male"))) |>
  mutate(monster_type = fct_collapse(monster_type,
                                         "Ancient" = c("Ancient", "Ancient,Ancient",
                                                       "Ancient,Animal",   "Ancient,Ghost,Extraterrestrial,Animal,Disguised,Ghost,Possessed Object,Magician,Magician,Ghost,Undead,Possessed Object,",
                                                       "Ancient,Possessed", 
                                                       "Ancient,Possessed Object"),
                                         "Animal" = c("Animal", "Animal,Ancient",
                                                      "Animal,Ancient,Ancient,Mechanical,Plant",
                                                      "Animal,Animal",
                                                      "Animal,Animal,Animal",
                                                      "Animal,Animal,Animal,Animal",
                                                      "Animal,Animal,Mythical,Possessed Object,Possessed Object,Ghost,Undead",
                                                      "Animal,Disguised",
                                                      "Animal,Mechanical",
                                                      "Animal,Plant",
                                                      "Animal,Undead",
                                                      "Animal,Undead,Disguised,Animal,Disguise,Ghost,Ghost,Animal",
                                                      "Animal,Undead,Undead"),
                                         "Disguised" = c("Disguised", "Disguised,Animal",
                                                         "Disguised,Animal,Possessed Object,Possessed Object,Possessed Object,Ancient,Possessed Object,Undead,Ghost,Undead,Undead",
                                                         "Disguised,Disguised",
                                                         "Disguised,Disguised,Disguised,Disguised",
                                                         "Disguised,Skeleton",
                                                         "Disguised,Undead,Animal,Animal",
                                                         "Disguised,Undead,Undead"),
                                         "Extraterrestrial" = c("Extraterrestrial",
                                                                "Extraterrestrial,Animal,Extraterrestrial",
                                                                "Extraterrestrial,Extraterrestrial",
                                                                "Extraterrestrial,Extraterrestrial,Extraterrestrial"),
                                         "Ghost" = c("Ghost", "Ghost,Ancient", "Ghost,Animal",
                                                     "Ghost,Disguised",                   "Ghost,Disguised,Undead,Disguised,Animal,Animal,Animal,Ancient,Disguised",
                                                     "Ghost,Ghost",
                                                     "Ghost,Ghost,Animal","Ghost,Ghost,Ghost",
                                                     "Ghost,Ghost,Ghost,Ghost",
                                                     "Ghost,Ghost,Ghost,Ghost,Mythical",
                                                     "Ghost,Ghost,Magician,Ghost", 
                                                     "Ghost,Ghost,Mythical",
                                                     "Ghost,Ghost,Undead,Animal,Animal",
                                                     "Ghost,Ghost,Undead,Undead,Possessed Object,Ghost",
                                                     "Ghost,Mythical","Ghost,Plant,Animal",
                                                     "Ghost,Possessed Object","Ghost,Undead",
                                                     "Ghost,Undead,Undead",
                                                     "Ghost,Undead,Undead,Undead,Animal,Animal,Animal"),
                                         "Magician" = c("Magician", "Magician,Animal",
                                                        "Magician,Ghost,Ghost",
                                                        "Magician,Ghost,Plant,Plant,Animal",
                                                        "Magician,Magician,Magician,Magician",
                                                        "Magician,Plant,Magician,Animal",
                                                        "Magician,Possessed Object",
                                                        "Magician,Possessed Object,Mythical,Demon"),
                                         "Mechanical" = c("Mechanical", "Mechanical,Ghost",
                                                          "Mechanical,Mechanical",
                                                          "Mechanical,Mechanical,Mechanical",
                                                          "Mechanical,Mechanical,Mechanical,Mechanical,Mechanical",
                                                          "Mechanical,Super-Villain,Animal,Mythical",    "Mechanical,Super-Villain,Disguised,Disguised,Super-Villain,Super-Villain,Super-Villain,Mechanical"),
                                         "Mythical" = c("Mythical", "Mythical,Ancient", 
                                                        "Mythical,Animal,Magician",
                                                        "Mythical,Ghost,Ghost",
                                                        "Mythical,Ghost,Ghost,Ghost",
                                                        "Mythical,Ghost,Ghost,Undead,Undead,Undead,Undead",
                                                        "Mythical,Mythical",
                                                        "Mythical,Mythical,Mythical,Mythical,Possessed Object,Possessed Object,Possessed Object,Possessed Object,Possessed Object,Animal",
                                                        "Mythical,Mythical,Mythical,Undead,Mythical,Mythical",
                                                        "Mythical,Plant,Plant,Mythical,Animal,Animal",
                                                        "Mythical,Undead"),
                                         "Plant" = c("Plant", "Plant,Animal,Animal,Magician",
                                                     "Plant,Plant", "Plant,Possessed Object"),
                                         "Possessed Object" = c("Possessed Object", 
                                                                "Possessed Object,Ghost",
                                                                "Possessed Object,Ghost,Ghost",
                                                                "Possessed Object,Magician",
                                                                "Possessed Object,Mythical,Animal,Animal,Animal",
                                                                "Possessed Object,Possessed Object",
                                                                "Possessed Object,Possessed Object,Possessed Object"),
                                         "Super-Villain" = c("Super-Villain", 
                                                             "Super-Villain,Disguised,Disguised",
                                                             "Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Super-Villain",
                                                             "Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Super-Villain,Super-Villain,Super-Villain",
                                                             "Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Super-Villain",                                   "Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Super-Villain,Super-Villain,Super-Villain",                                      "Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Super-Villain",
                                                             "Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Super-Villain",
                                                             "Super-Villain,Disguised,Disguised,Super-Villain",
                                                             "Super-Villain,Mechanical,Disguised,Super-Villain",
                                                             "Super-Villain,Super-Villain,Disguised,Disguised,Super-Villain,Super-Villain",
                                                             "Super-Villain,Super-Villain,Super-Villain",
                                                             "Super-Villain,Super-Villain,Super-Villain,Disguised,Disguised,Disguised",
                                                             "Super-Villain,Super-Villain,Super-Villain,Super-Villain,Disguised",
                                                             "Super-Villain,Super-Villain,Super-Villain,Super-Villain,Super-Villain,Super-Villain,Super-Villain,Super-Villain,Super-Villain,Super-Villain,Super-Villain",
                                                             "Super-Villain,Super-Villain,Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised",
                                                             "Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Dr. Trebal",
                                                             "Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Dr. Trebal,Super-Villain",
                                                             "Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised, Disguised, Disguised,Super-Villain",
                                                             "Super-Villain,Super-Villain,Super-Villain,Disguised,Super-Villain,Super-Villain,Super-Villain",
                                                             "Super-Villain,Super-Villain,Mechanical,Super-Villain,Super-Villain,Disguised,Disguised",
                                                             "Super-Villain,Super-Villain,Disguised,Disguised,Super-Villain,Super-Villain,Disguised,Disguised,Disguised",
                                                             "Super-Villain,Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Super-Villain",
                                                             "Super-Villain,Super-Villain,Disguised,Disguised,Disguised,Disguised,Disguised,Disguised,Super-Villain,Super-Villain",
                                                             "Super-Villain,Disguised,Disguised,Disguised,Super-Villain,Super-Villain,Super-Villain,Super-Villain,Super-Villain",
                                                             "Super-Villain,Disguised,Disguised,Super-Villain,Super-Villain,Super-Villain,Animal,Animal,Undead,Undead,Undead,Animal",
                                                             "Super-Villain,Disguised,Disguised,Disguised,Super-Villain,Super-Villain,Super-Villain,Super-Villain,Super-Villain",
                                                             "Super-Villain,Disguised,Disugised,Disguised,Super-Villain,Super-Villain,Super-Villain,Animal,Animal"),
                                         "Undead" = c("Undead", "Undead,Animal", "Undead,Animal,Animal,Animal,Animal",
                                                      "Undead,Animal,Undead", "Undead,Ghost,Ghost,Ghost,Ancient,Ghost,Ghost",
                                                      "Undead,Ghost,Ghost,Ghost,Plant", "Undead,Ghost,Undead,Undead",
                                                      "Undead,Magician", "Undead,Undead", "Undead,Undead,Animal",
                                                      "Undead,Undead,Mythical,Mythical,Magician,Mythical,Mythical,Mythical",
                                                      "Undead,Undead,Plant,Animal",
                                                      "Undead,Undead,Undead", "Undead,Undead,Undead,Animal",
                                                      "Undead,Undead,Undead,Undead",
                                                      "Undead,Undead,Undead,Undead,Undead,Undead,Undead,Undead",
                                                      "Undead,Animal,Undead,Undead,Magician,Magician,Undead,Undead,Possessed Object,Undead,Disfigured,Disfigured,Animal,Disguised,Insect,Insect,Possessed Object,Animal,Plant"))) |>
  mutate(number_of_snacks = fct_collapse(number_of_snacks,
                                             "2" = c("2", "a couple"),
                                             "3" = c("3", "several"),
                                             "3 boxes" = c("3 boxes", "several boxes")))

caught_df <- df |> select(1, 2, 3, 4, 5, 6, 7, 8 , 9, 26, 27, 28, 29, 30, 31, 36) |> 
  mutate(caught_fred = as.factor(caught_fred)) |>
  mutate(caught_fred = if_else(caught_fred == "TRUE",
                               true = "Fred",
                               false = "0")) |>
  mutate(caught_daphnie = as.factor(caught_daphnie)) |>
  mutate(caught_daphnie = if_else(caught_daphnie == "TRUE",
                               true = "Daphnie",
                               false = "0")) |>
  mutate(caught_velma = as.factor(caught_velma)) |>
  mutate(caught_velma = if_else(caught_velma == "TRUE",
                               true = "Velma",
                               false = "0")) |>
  mutate(caught_shaggy = as.factor(caught_shaggy)) |>
  mutate(caught_shaggy = if_else(caught_shaggy == "TRUE",
                               true = "Shaggy",
                               false = "0")) |>
  mutate(caught_scooby = as.factor(caught_scooby)) |>
  mutate(caught_scooby = if_else(caught_scooby == "TRUE",
                               true = "Scooby",
                               false = "0")) |>
  mutate(caught_other = as.factor(caught_other)) |>
  mutate(caught_other = if_else(caught_other == "TRUE",
                               true = "Other",
                               false = "0")) |> 
  mutate(caught_not = as.factor(caught_not)) |>
  mutate(caught_not = if_else(caught_not == "TRUE",
                               true = "Not Caught",
                               false = "0")) |>
  pivot_longer(cols = (5:11), names_to = "who", values_to = "caught_by") |>
  separate(col = who, into = c("caught", "who"), sep = "_") |>
  mutate(caught_by = if_else(caught_by!=0, 1, 0))

captured_df <- df |> select(1:4, 10:14, 26:31, 36) |> 
  mutate(captured_fred = as.factor(captured_fred)) |>
  mutate(captured_fred = if_else(captured_fred == "TRUE",
                               true = "Fred",
                               false = "0")) |>
  mutate(captured_daphnie = as.factor(captured_daphnie)) |>
  mutate(captured_daphnie = if_else(captured_daphnie == "TRUE",
                               true = "Daphnie",
                               false = "0")) |>
  mutate(captured_velma = as.factor(captured_velma)) |>
  mutate(captured_velma = if_else(captured_velma == "TRUE",
                               true = "Velma",
                               false = "0")) |>
  mutate(captured_shaggy = as.factor(captured_shaggy)) |>
  mutate(captured_shaggy = if_else(captured_shaggy == "TRUE",
                               true = "Shaggy",
                               false = "0")) |>
  mutate(captured_scooby = as.factor(captured_scooby)) |>
  mutate(captured_scooby = if_else(captured_scooby == "TRUE",
                               true = "Scooby",
                               false = "0")) |>
  pivot_longer(cols = (5:9), names_to = "who", values_to = "captured_by") |>
  separate(col = who, into = c("captured", "who"), sep = "_") |>
  mutate(captured_by = if_else(captured_by!=0, 1, 0))

unmasked_df <- df |> select(1:4, 15:19, 25:31, 36) |> 
  mutate(unmask_fred = as.factor(unmask_fred)) |>
  mutate(unmask_fred = if_else(unmask_fred == "TRUE",
                               true = "Fred",
                               false = "0")) |>
  mutate(unmask_daphnie = as.factor(unmask_daphnie)) |>
  mutate(unmask_daphnie = if_else(unmask_daphnie == "TRUE",
                               true = "Daphnie",
                               false = "0")) |>
  mutate(unmask_velma = as.factor(unmask_velma)) |>
  mutate(unmask_velma = if_else(unmask_velma == "TRUE",
                               true = "Velma",
                               false = "0")) |>
  mutate(unmask_shaggy = as.factor(unmask_shaggy)) |>
  mutate(unmask_shaggy = if_else(unmask_shaggy == "TRUE",
                               true = "Shaggy",
                               false = "0")) |>
  mutate(unmask_scooby = as.factor(unmask_scooby)) |>
  mutate(unmask_scooby = if_else(unmask_scooby == "TRUE",
                               true = "Scooby",
                               false = "0")) |>
  mutate(unmask_other = as.factor(unmask_other)) |>
  mutate(unmask_other = if_else(unmask_other == "TRUE",
                               true = "Other",
                               false = "0")) |>
  pivot_longer(cols = (5:10), names_to = "who", values_to = "unmasked") |>
  separate(col = who, into = c("unmasked_by", "who"), sep = "_") |>
  mutate(unmasked = if_else(unmasked!=0, 1, 0))

snacks_df <- df |> select(1:4, 20:24, 26:31, 36) |> 
  mutate(snack_fred = as.factor(snack_fred)) |>
  mutate(snack_fred = if_else(snack_fred == "TRUE",
                               true = "Fred",
                               false = "0")) |>
  mutate(snack_daphnie = as.factor(snack_daphnie)) |>
  mutate(snack_daphnie = if_else(snack_daphnie == "TRUE",
                               true = "Daphnie",
                               false = "0")) |>
  mutate(snack_velma = as.factor(snack_velma)) |>
  mutate(snack_velma = if_else(snack_velma == "TRUE",
                               true = "Velma",
                               false = "0")) |>
  mutate(snack_shaggy = as.factor(snack_shaggy)) |>
  mutate(snack_shaggy = if_else(snack_shaggy == "TRUE",
                               true = "Shaggy",
                               false = "0")) |>
  mutate(snack_scooby = as.factor(snack_scooby)) |>
  mutate(snack_scooby = if_else(snack_scooby == "TRUE",
                               true = "Scooby",
                               false = "0")) |>
  pivot_longer(cols = (5:9), names_to = "who", values_to = "snacks") |>
  separate(col = who, into = c("snack", "who"), sep = "_") |>
  mutate(snacks = if_else(snacks!=0, 1, 0))

catchphrase_df <- df |> select(1:4, 32:35, 26:31, 36) |>
  pivot_longer(cols = (5:8), names_to = "catchphrase", values_to = "Count") |>
  mutate(Count = as.factor(Count)) |>
  mutate(Count = fct_recode(Count, "0" = "NULL")) |>
  mutate(Count = as.numeric(as.character(Count))) 
```

**Abstract**

A Scooby-Doo data set obtained from tidyTuesday was analyzed to look at which character catches, captures, unmasks, and snacks the most throughout all of the Scooby-Doo series. A shiny app was made to aid in the understanding of how these outcomes change based on certain characteristics of the investigations. It was found that throughout all of the Scooby-Doo series, Daphnie captures and snacks the most, Shaggy says his catchphrase, Zoinks, the most, Scooby catches the most, and Fred unmasks the most.

**Introduction**

This analysis will be using the Scooby-Doo data set from tidyTuesday that can be found at this web address: https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-07-13/readme.md. The data set has 603 observations by accounting for all of the different Scooby-Doo series, including cross over episodes, and looks at 75 different variables. The main variables of interest include the series name and the caught, captured, unmasked, catchphrase and snack variables for the different characters. This analysis will focus on determining which character catches, captures, unmasks, says their catchphrase, and snacks the most throughout the Scooby-Doo series. Additionally, a shiny app was made to help determine how these numbers change when focusing on different characteristics of the investigation. The different characteristics include the culprit's gender, how many monsters there were, if the monster was real, what type of monster it was, how many total snacks were consumed, if the group split up during the investigation, and if there was trap work set up prior to catching the monster.

**Visualizations**

Captured:

```{r}
captured_graph <- captured_df |> group_by(who) |> summarise(count = sum(captured_by))
ggplot(data = captured_graph, aes(x = who, y = count)) +
  geom_col(position = "dodge", fill = c("#7c68ae", "#76a2ca",
                                        "#B87333","#b2bb1b", "#F8991D")) +
  labs(title = "Captured Count by Character", x = "Character", y = "Count")
```

From this graph, we can see that Daphnie captures the most compared to the other characters throughout all of the Scooby-Doo series. However, it is fairly close amongst the characters, as no one captures dramatically less than any of the other characters. However, using the app, when we filter for the different monster_types, we see that this changes.

```{r}
captured_graph <- captured_df |> filter(monster_type == "Super-Villain") |>
  group_by(who) |> summarise(count = sum(captured_by))
ggplot(data = captured_graph, aes(x = who, y = count)) +
  geom_col(position = "dodge", fill = c("#7c68ae", "#76a2ca",
                                        "#B87333","#b2bb1b", "#F8991D")) +
  labs(title = "Captured Count by Character with Super-Villain for the monster type", x = "Character", y = "Count")
```

From this graph we can see that there is a change when the monster is a super-villain. Scooby captures the most when the monster is a super-villain, and Daphnie is now tied for the least amount of captures.

Catchphrase:

```{r}
catchphrase_graph <- catchphrase_df |> group_by(catchphrase) |> 
  summarise(count = sum(Count))
ggplot(data = catchphrase_graph, aes(x = catchphrase, y = count)) +
  geom_col(position = "dodge", fill = c("#7c68ae","#F8991D",
                                        "#B87333","#b2bb1b")) +
  labs(title = "Catchphrase Count", x = "Catchphrase", y = "Count")
```

From this graph, we can see that Shaggy says zoinks a lot more than any of the other characters says their catchphrase across all of the seasons. This is a little surprising, as I would have guessed that Scooby said rooby rooby roo the most, though that is the second lowest count.

```{r}
catchphrase_graph <- catchphrase_df |> filter(number_of_snacks == "truck load") |>
  group_by(catchphrase) |> 
  summarise(count = sum(Count))
ggplot(data = catchphrase_graph, aes(x = catchphrase, y = count)) +
  geom_col(position = "dodge", fill = c("#7c68ae","#F8991D",
                                        "#B87333","#b2bb1b")) +
  labs(title = "Catchphrase Count with a truck load for the total number of snacks", x = "Catchphrase", y = "Count")
```

Using the app to obtain this visualization, we can see that when there is a whole truckload of snacks eaten, Velma says her catchphrase more often, though not by much.

Caught:

```{r}
caught_graph <- caught_df |> group_by(who) |> summarise(count = sum(caught_by))
ggplot(data = caught_graph, aes(x = who, y = count)) +
  geom_col(position = "dodge", fill = c("#7c68ae", "#76a2ca", "black", "red",
                                        "#B87333","#b2bb1b", "#F8991D")) +
  labs(title = "Caught Count by Character", x = "Character", y = "Count")
```

This graph shows us that across all of the series, Scooby catches the culprit the most. I was surprised by how little Daphnie and Velma caught the culprit and how high the count for "other" was.

```{r}
caught_graph <- caught_df |> filter(monster_real == "TRUE") |>
  group_by(who) |> summarise(count = sum(caught_by))
ggplot(data = caught_graph, aes(x = who, y = count)) +
  geom_col(position = "dodge", fill = c("#7c68ae", "#76a2ca", "black", "red",
                                        "#B87333","#b2bb1b", "#F8991D")) +
  labs(title = "Caught Count by Character for a real monster", x = "Character", y = "Count")
```

When looking through the shiny app, this changed depending on whether or not the monster was real. When the monster is real, it is a lot more likely to not be caught. Although, Scooby is still the most likely to catch it out of al of the characters.

```{r}
caught_graph <- caught_df |> filter(trap_work_first == "Yes") |>
  group_by(who) |> summarise(count = sum(caught_by))
ggplot(data = caught_graph, aes(x = who, y = count)) +
  geom_col(position = "dodge", fill = c("#7c68ae", "#76a2ca", "black", "red",
                                        "#B87333","#b2bb1b", "#F8991D")) +
  labs(title = "Caught Count by Character with trap work first", x = "Character", y = "Count")
```

Additionally, if we look at if there was a trap set up before catching the monster, we see that Fred is now much more likely to be the one to catch the monster.

Snacks:

```{r}
snacks_graph <- snacks_df |> group_by(who) |> summarise(count = sum(snacks))
ggplot(data = snacks_graph, aes(x = who, y = count)) +
  geom_col(position = "dodge", fill = c("#7c68ae", "#76a2ca",
                                        "#B87333","#b2bb1b", "#F8991D")) +
  labs(title = "Snack Count by Character", x = "Character", y = "Number of Snacks")
```

This visualization shows us that Daphnie has the most amount of episodes where she has a snack and Scooby has the lowest. This is very shocking to me, as I would have thought that Shaggy and Scooby would have a significantly higher amount of snacks compared to all of the other characters.

```{r}
snacks_graph <- snacks_df |> filter(monster_real == "TRUE") |>
  group_by(who) |> summarise(count = sum(snacks))
ggplot(data = snacks_graph, aes(x = who, y = count)) +
  geom_col(position = "dodge", fill = c("#7c68ae", "#76a2ca",
                                        "#B87333","#b2bb1b", "#F8991D")) +
  labs(title = "Snack Count by Character when the monster is real", x = "Character", y = "Number of Snacks")
```

This graph shows us that when the monster is real, Daphnie snacks a lot less and Shaggy snacks a lot more.

Unmasked:

```{r}
unmasked_graph <- unmasked_df |> group_by(who) |> summarise(count = sum(unmasked))
ggplot(data = unmasked_graph, aes(x = who, y = count)) +
  geom_col(position = "dodge", fill = c("#7c68ae", "#76a2ca", "black",
                                        "#B87333","#b2bb1b", "#F8991D")) +
  labs(title = "Unmasked Count by Character", x = "Character", y = "Count")
```

This graph shows us that Fred unmasks the culprit the most, with Velma having the second highest unmasking count across all of the series while Shaggy and Scooby have the lowest count for unmasking the culprit.

```{r}
unmasked_graph <- unmasked_df |> filter(trap_work_first == "No") |>
  group_by(who) |> summarise(count = sum(unmasked))
ggplot(data = unmasked_graph, aes(x = who, y = count)) +
  geom_col(position = "dodge", fill = c("#7c68ae", "#76a2ca", "black",
                                        "#B87333","#b2bb1b", "#F8991D")) +
  labs(title = "Unmasked Count by Character when there is not trap work first", x = "Character", y = "Count")
```

This graph shows us that when there is not trap work first, Velma is the one who unmasks the monster the most. This is interesting since we had previously seen that Fred is most likely to capture the monster if there is trap work first, meaning that he is unmasking more when he catches them with his trap work than when there is not trap work.

**Conclusion**

From this analysis, we have seen taht Daphnie captures the most, but when the monster is a supper-villain it is scooby that captures the most. When looking at the catchphrases, we saw that Shaggy says zoinks the most, but when more snacks are eaten (a whole truck load), Velma says Jinkies more. We also saw taht Scooby catches the culprit the most, however when the monster is real it is more likely to not be caught and when a trap is set up first, Fred is more likely to catch the monster. Additionally, Daphnie snacks most consistently, but when the monster is real Shaggy snacks a lot more. Finally, Fred unmasks the monster the most, but when there is not trap work Velma unmasks the culprit more often.

It is important to note that there is a limitation when looking at who snacks the most. The variable for snacking is a simple boolean variable of whether or not the character snacks in that episode. It does not take into account how many snacks that individual character consumed that episode, and there is a wide range of snacks ranging from 1 to a truck load to a lifetime supply which significantly impacts the comparison ability for the snacking habits of the characters.

With more time for analysis, it would be interesting to predict either the engagement or imbd rating based on characteristics of the episodes, focusing on the ones I looked at to see if who unmasks or catches the monster, etc. impacts the rating and engagement of that episode. 
